{"version":3,"sources":["navigation.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","Navbar","bg","expand","Container","Brand","href","Toggle","Collapse","id","Nav","className","Link","NavDropdown","title","Item","Component","App","exact","path","component","Home","About","FormatXML","FormatJSON","FormatHTML","FormatSQL","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"iRAGMA,E,4JACF,WACI,OACI,cAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,KAA1B,SACI,eAACC,EAAA,EAAD,WACI,cAACH,EAAA,EAAOI,MAAR,CAAcC,KAAK,IAAnB,uBACA,cAACL,EAAA,EAAOM,OAAR,CAAe,gBAAc,qBAC7B,cAACN,EAAA,EAAOO,SAAR,CAAiBC,GAAG,mBAApB,SACI,eAACC,EAAA,EAAD,CAAKC,UAAU,UAAf,UACI,cAACD,EAAA,EAAIE,KAAL,CAAUN,KAAK,IAAf,kBACA,eAACO,EAAA,EAAD,CAAaC,MAAM,YAAYL,GAAG,qBAAlC,UACI,cAACI,EAAA,EAAYE,KAAb,CAAkBT,KAAK,iBAAvB,iBACA,cAACO,EAAA,EAAYE,KAAb,CAAkBT,KAAK,kBAAvB,kBACA,cAACO,EAAA,EAAYE,KAAb,CAAkBT,KAAK,kBAAvB,kBACA,cAACO,EAAA,EAAYE,KAAb,CAAkBT,KAAK,iBAAvB,oBAEJ,eAACO,EAAA,EAAD,CAAaC,MAAM,YAAYL,GAAG,qBAAlC,UACI,cAACI,EAAA,EAAYE,KAAb,CAAkBT,KAAK,iBAAvB,iBACA,cAACO,EAAA,EAAYE,KAAb,CAAkBT,KAAK,kBAAvB,kBACA,cAACO,EAAA,EAAYE,KAAb,CAAkBT,KAAK,kBAAvB,kBACA,cAACO,EAAA,EAAYE,KAAb,CAAkBT,KAAK,iBAAvB,oBAEJ,cAACI,EAAA,EAAIE,KAAL,CAAUN,KAAK,SAAf,iC,GAtBHU,aA+BVhB,I,OC5BTiB,E,4JACJ,WACE,OACE,sBAAKN,UAAU,MAAf,UACE,cAAC,EAAD,IACA,uBACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOO,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC,cAAC,IAAD,CAAOF,KAAK,SAASC,UAAWE,IAChC,cAAC,IAAD,CAAOJ,OAAK,EAACC,KAAK,iBAAiBC,UAAWG,IAC9C,cAAC,IAAD,CAAOL,OAAK,EAACC,KAAK,kBAAkBC,UAAWI,IAC/C,cAAC,IAAD,CAAON,OAAK,EAACC,KAAK,kBAAkBC,UAAWK,IAC/C,cAAC,IAAD,CAAOP,OAAK,EAACC,KAAK,iBAAiBC,UAAWM,c,GAZtCV,aAmBZK,EAAO,kBAAM,8BAAK,yCAClBC,EAAQ,kBAAM,8BAAK,0CACnBC,EAAY,kBAAM,8BAAK,+CACvBC,EAAa,kBAAM,8BAAK,gDACxBC,EAAa,kBAAM,8BAAK,gDACxBC,EAAY,kBAAM,8BAAK,+CAEdT,ICpBAU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,gBCEdQ,IAASC,OACJ,cAAC,IAAD,UACG,cAAC,EAAD,MAGNC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1ffa68a2.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap';\n\nclass Navigation extends Component {\n    render() {\n        return (\n            <Navbar bg=\"light\" expand=\"lg\">\n                <Container>\n                    <Navbar.Brand href=\"/\">React App</Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"me-auto\">\n                            <Nav.Link href=\"/\">Home</Nav.Link>\n                            <NavDropdown title=\"Formatter\" id=\"basic-nav-dropdown\">\n                                <NavDropdown.Item href=\"/formatter/xml\">XML</NavDropdown.Item>\n                                <NavDropdown.Item href=\"/formatter/json\">JSON</NavDropdown.Item>\n                                <NavDropdown.Item href=\"/formatter/html\">HTML</NavDropdown.Item>\n                                <NavDropdown.Item href=\"/formatter/sql\">SQL</NavDropdown.Item>\n                            </NavDropdown>\n                            <NavDropdown title=\"Validator\" id=\"basic-nav-dropdown\">\n                                <NavDropdown.Item href=\"/validator/xml\">XML</NavDropdown.Item>\n                                <NavDropdown.Item href=\"/validator/json\">JSON</NavDropdown.Item>\n                                <NavDropdown.Item href=\"/validator/html\">HTML</NavDropdown.Item>\n                                <NavDropdown.Item href=\"/validator/sql\">SQL</NavDropdown.Item>\n                            </NavDropdown>\n                            <Nav.Link href=\"/about\">About</Nav.Link>\n                        </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        );\n    }\n}\n\nexport default Navigation;","import './App.css';\nimport React, { Component } from 'react';\nimport Navigation from './navigation';\nimport { Switch, Route } from 'react-router-dom';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Navigation />\n        <br/>\n        <Switch>\n          <Route exact path='/' component={Home} />\n          <Route path='/about' component={About} />\n          <Route exact path='/formatter/xml' component={FormatXML} />\n          <Route exact path='/formatter/json' component={FormatJSON} />\n          <Route exact path='/formatter/html' component={FormatHTML} />\n          <Route exact path='/formatter/sql' component={FormatSQL} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nconst Home = () => <div><h2>Home</h2></div>\nconst About = () => <div><h2>About</h2></div>\nconst FormatXML = () => <div><h2>Format XML</h2></div>\nconst FormatJSON = () => <div><h2>Format JSON</h2></div>\nconst FormatHTML = () => <div><h2>Format HTML</h2></div>\nconst FormatSQL = () => <div><h2>Format SQL</h2></div>\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// Importing the Bootstrap CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n     <BrowserRouter>\n        <App />\n      </BrowserRouter>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}